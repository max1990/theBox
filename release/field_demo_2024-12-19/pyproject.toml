[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thebox-mvp"
version = "0.1.0"
description = "Modular drone detection system with plugin architecture for field deployment"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "TheBox Team", email = "team@thebox.local"}
]
keywords = ["drone", "detection", "rf", "radar", "vision", "sensors"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware",
]
dependencies = [
    "Flask>=2.0.0,<4.0.0",
    "Werkzeug>=2.0.0,<4.0.0",
    "Jinja2>=3.0.0,<4.0.0",
    "pydantic>=2.6.0,<3.0.0",
    "pydantic-core>=2.0.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "structlog>=23.0.0,<26.0.0",
    "tenacity>=8.0.0,<10.0.0",
    "pyserial>=3.5,<4.0.0",
    "pyserial-asyncio>=0.6,<1.0.0",
    "pyproj>=3.7.0,<4.0.0",
    "pytest>=7.0.0,<9.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0,<25.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.0.0,<3.0.0",
    "pip-tools>=7.0.0,<8.0.0",
]
gpu = [
    "onnxruntime-gpu>=1.20.0,<2.0.0",
    "opencv-python>=4.8.0,<5.0.0",
    "Pillow>=10.0.0,<11.0.0",
    "numpy>=1.24.0,<3.0.0",
    "scipy>=1.10.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "imageio>=2.31.0,<3.0.0",
    "matplotlib>=3.7.0,<4.0.0",
]
jetson = [
    "onnxruntime>=1.20.0,<2.0.0",
    "opencv-python>=4.8.0,<5.0.0",
    "Pillow>=10.0.0,<11.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scipy>=1.10.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "jetson-stats>=4.0.0,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/thebox/thebox-mvp"
Documentation = "https://thebox.readthedocs.io"
Repository = "https://github.com/thebox/thebox-mvp.git"
Issues = "https://github.com/thebox/thebox-mvp/issues"

[project.scripts]
thebox = "app:main"
thebox-status = "scripts.status:main"

[tool.pytest.ini_options]
addopts = "-q --tb=short"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "onnxruntime.*",
    "pyserial.*",
    "pyproj.*",
]
ignore_missing_imports = true


