# TheBox Docker Compose Configuration
# Supports both workstation and Jetson deployments

version: '3.8'

services:
  thebox:
    build:
      context: .
      dockerfile: Dockerfile.workstation  # Change to Dockerfile.jetson for Jetson
    container_name: thebox
    restart: unless-stopped
    ports:
      - "80:80"
      - "8888:8888"    # DroneShield
      - "50051:50051"  # Silvus
      - "8787:8787"    # MARA
      - "4010:4010"    # Dspnor CAT010
      - "60000:60000"  # Dspnor NMEA
      - "62000:62000"  # SeaCross
    environment:
      - SECRET_KEY=${SECRET_KEY:-production-key-change-me}
      - THEBOX_WEB_HOST=0.0.0.0
      - THEBOX_WEB_PORT=80
      - VISION_BACKEND=${VISION_BACKEND:-onnxruntime}
      - VISION_MODEL_PATH=${VISION_MODEL_PATH:-}
      - DRONESHIELD_UDP_PORT=8888
      - SILVUS_UDP_PORT=50051
      - MARA_UDP_PORT=8787
      - DSPNOR_CAT010_PORT=4010
      - DSPNOR_NMEA_UDP_PORT=60000
      - SEACROSS_PORT=62000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./env:/app/env
    networks:
      - thebox-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["python3", "scripts/health_check.py", "--host", "127.0.0.1", "--port", "80", "--timeout", "5"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if needed in future)
  # redis:
  #   image: redis:7-alpine
  #   container_name: thebox-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - thebox-network

  # Optional: Prometheus for monitoring (if needed in future)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: thebox-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   networks:
  #     - thebox-network

  # Optional: Grafana for visualization (if needed in future)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: thebox-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - thebox-network

networks:
  thebox-network:
    driver: bridge

volumes:
  # redis-data:
  # prometheus-data:
  # grafana-data:
