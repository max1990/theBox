[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --durations=10
    --pythonpath=.

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    gpu: GPU-required tests
    jetson: Jetson-specific tests
    confidence: Confidence fusion tests
    range: Range estimation tests
    plugins: Plugin tests
    deterministic: Deterministic tests

# Test configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pydantic.*

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
source = mvp, plugins
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv*/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
